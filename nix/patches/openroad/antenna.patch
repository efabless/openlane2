diff --git a/src/odb/include/odb/db.h b/src/odb/include/odb/db.h
index 02e9f36d8..3642a153c 100644
--- a/src/odb/include/odb/db.h
+++ b/src/odb/include/odb/db.h
@@ -5704,6 +5704,8 @@ class dbMTerm : public dbObject
   // From LEF's ANTENNADIFFAREA on the MACRO's PIN
   void getDiffArea(std::vector<std::pair<double, dbTechLayer*>>& data);
 
+  bool hasDiffArea();
+
   void* staPort();
   void staSetPort(void* port);
 
@@ -6665,6 +6667,7 @@ class dbTechAntennaPinModel : public dbObject
   void addMaxSideAreaCAREntry(double inval, dbTechLayer* refly = nullptr);
   void addMaxCutCAREntry(double inval, dbTechLayer* refly = nullptr);
 
+  bool hasGateArea();
   void getGateArea(std::vector<std::pair<double, dbTechLayer*>>& data);
   void getMaxAreaCAR(std::vector<std::pair<double, dbTechLayer*>>& data);
   void getMaxSideAreaCAR(std::vector<std::pair<double, dbTechLayer*>>& data);
diff --git a/src/odb/src/db/dbMTerm.cpp b/src/odb/src/db/dbMTerm.cpp
index 5d82e751b..f87dca48f 100644
--- a/src/odb/src/db/dbMTerm.cpp
+++ b/src/odb/src/db/dbMTerm.cpp
@@ -490,6 +490,16 @@ void dbMTerm::getDiffArea(std::vector<std::pair<double, dbTechLayer*>>& data)
       mterm->getDatabase(), mterm->_diffarea, data);
 }
 
+bool dbMTerm::hasDiffArea()
+{
+  std::vector<std::pair<double, dbTechLayer*>> diff_areas;
+  getDiffArea(diff_areas);
+  if (diff_areas.size() > 0)
+    return true;
+  else
+    return false;
+}
+
 void dbMTerm::writeAntennaLef(lefout& writer) const
 {
   _dbMTerm* mterm = (_dbMTerm*) this;
diff --git a/src/odb/src/db/dbTechLayerAntennaRule.cpp b/src/odb/src/db/dbTechLayerAntennaRule.cpp
index 6b10d2b3c..a7c5f8bb6 100644
--- a/src/odb/src/db/dbTechLayerAntennaRule.cpp
+++ b/src/odb/src/db/dbTechLayerAntennaRule.cpp
@@ -985,6 +985,16 @@ void _dbTechAntennaPinModel::getAntennaValues(
   }
 }
 
+bool dbTechAntennaPinModel::hasGateArea()
+{
+  vector<std::pair<double, dbTechLayer*>> gate_areas;
+  getGateArea(gate_areas);
+  if (gate_areas.size() > 0)
+    return true;
+  else
+    return false;
+}
+
 void dbTechAntennaPinModel::getGateArea(
     std::vector<std::pair<double, dbTechLayer*>>& data)
 {

